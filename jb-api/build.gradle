/*
 * This file is part of JuniperBotJ.
 *
 * JuniperBotJ is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * JuniperBotJ is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with JuniperBotJ. If not, see <http://www.gnu.org/licenses/>.
 */
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'application'
apply plugin: 'org.springframework.boot'

description = 'JuniperBot Discord Bot Web Application'

ext {
    moduleName = 'JuniperBot-Web'
}

mainClassName = 'ru.juniperbot.api.JuniperApiApplication'

bootJar {
    archiveName = "JuniperBot-API.jar"
}

dependencies {

    compile project(':jb-common')
    annotationProcessor(group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion)

    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web')
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-security')
    compile(group: 'org.springframework.security', name: 'spring-security-acl')
    compile(group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: springOauthVersion)

    compile(group: 'org.glassfish.main.external', name: 'jmxremote_optional-repackaged', version: jmxRemote)
    compile(group: 'org.glassfish.external', name: 'opendmk_jmxremote_optional_jar', version: jmxRemoteLegacy)

    compile(group: 'org.openpnp', name: 'opencv', version: opencvVersion + '-0')
    compile(group: 'org.opencv', name: 'opencv', version: opencvVersion)

    // SOCIAL DEPENDENCIES
    compile(group: 'com.github.twitch4j', name: 'twitch4j', version: twitch4jVersion) {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    compile(group: 'com.vk.api', name: 'sdk', version: vkSdkVersion)
    compile(group: 'com.rometools', name: 'rome', version: romeVersion)

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test')
    testCompile(group: 'org.springframework.security', name: 'spring-security-test')

}

processResources {
    filesMatching("**/application.yml") {
        filter ReplaceTokens, tokens: [
                "build.version"     : project.version,
                "build.timestamp"   : System.currentTimeMillis() + '',
                "JDA.version"       : jdaVersion,
                "lavaplayer.version": lavaplayerVersion,
                "spring.version"    : dependencyManagement.importedProperties['spring.version']
        ]
    }
}